{
  "hash": "1b023b5602dd2964c01ee628cebb30b9",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Interactive Linear Regression Lab\nformat: live-html\nthebe:\n  use_thebe: true\n  binderOptions:\n    repo: sandeepnarasimhan/Neural-Notes\n    ref: main\n    binderUrl: https://mybinder.org\n---\n\n[![Tweet](https://img.shields.io/badge/Tweet-Share_on_Twitter-1DA1F2?logo=twitter)](https://twitter.com/intent/tweet?text=Check%20out%20this%20post!&url=https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)\n[![LinkedIn](https://img.shields.io/badge/Share-LinkedIn-blue?logo=linkedin)](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)\n[![Email](https://img.shields.io/badge/Email-Share_via_Email-red?logo=gmail)](mailto:?subject=Interesting%20Post&body=Check%20out%20this%20blog%20post%3A%20https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)\n[![WhatsApp](https://img.shields.io/badge/WhatsApp-Share-25D366?logo=whatsapp&logoColor=white)](https://api.whatsapp.com/send?text=Check%20out%20this%20blog%20post%3A%20https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)\n[![Reddit](https://img.shields.io/badge/Reddit-Share-orange?logo=reddit)](https://www.reddit.com/submit?url=https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html&title=Virtual%20Environments)\n\n\n::: {.callout-warning icon=\"üõ†Ô∏è\" .bg-yellow-100 .border-yellow-500 .text-yellow-800}\n**üöß Work in Progress!**  \n**Hey! I‚Äôm still working on this post. If you‚Äôre interested, keep an eye out for updates here ‚Äî exciting stuff coming soon!!**\n:::\n\nThis interactive lab demonstrates a simple linear regression using `scikit-learn`.\n\nYou can **click on the code blocks and run them interactively** in your browser!\n\n---\n\n## üìä Generate Sample Data\n\n```{pyodide}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create sample data\nX = np.array([1, 2, 3, 4, 5]).reshape(-1, 1)\ny = np.array([1.2, 2.3, 2.9, 4.4, 5.1])\n\nplt.scatter(X, y, color='blue')\nplt.title(\"Sample Data\")\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\nplt.grid(True)\nplt.show()\n```\n\n",
    "supporting": [
      "regression_lab_files"
    ],
    "filters": [],
    "includes": {}
  }
}