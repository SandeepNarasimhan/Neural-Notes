---
title: "Descriptive Statistics"
author: "Sandeep N"
date: 2025-07-18
categories: [Version Control, python, Git, Github]
format:
  html:
    code-tools: true
    embed-resources: true
jupyter: python3
---

[![Tweet](https://img.shields.io/badge/Tweet-Share_on_Twitter-1DA1F2?logo=twitter)](https://twitter.com/intent/tweet?text=Check%20out%20this%20post!&url=https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)
[![LinkedIn](https://img.shields.io/badge/Share-LinkedIn-blue?logo=linkedin)](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)
[![Email](https://img.shields.io/badge/Email-Share_via_Email-red?logo=gmail)](mailto:?subject=Interesting%20Post&body=Check%20out%20this%20blog%20post%3A%20https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)
[![WhatsApp](https://img.shields.io/badge/WhatsApp-Share-25D366?logo=whatsapp&logoColor=white)](https://api.whatsapp.com/send?text=Check%20out%20this%20blog%20post%3A%20https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html)
[![Reddit](https://img.shields.io/badge/Reddit-Share-orange?logo=reddit)](https://www.reddit.com/submit?url=https%3A%2F%2Fsandeepnarasimhan.github.io%2FNeural-Notes%2Fposts%2FVenvs.html&title=Virtual%20Environments)


::: {.callout-warning icon="üõ†Ô∏è" .bg-yellow-100 .border-yellow-500 .text-yellow-800}
**üöß Work in Progress!**  
**Hey! I‚Äôm still working on this post. If you‚Äôre interested, keep an eye out for updates here ‚Äî exciting stuff coming soon!!**
:::


```{python}
#|echo: False

import numpy as np
import plotly.graph_objects as go

x = np.linspace(-10, 10, 500)

mu_values = np.arange(-5, 5.5, 0.5)
sigma = 1

# Create traces
traces = []
for mu in mu_values:
    y = 1/(sigma*np.sqrt(2*np.pi)) * np.exp(-(x - mu)**2 / (2*sigma**2))
    traces.append(go.Scatter(x=x, y=y, name=f"Œº={mu}", visible=False))

traces[0].visible = True

steps = []
for i, mu in enumerate(mu_values):
    step = dict(method="update",
                args=[{"visible": [j == i for j in range(len(mu_values))]},
                      {"title": f"Normal Distribution Œº={mu}, œÉ={sigma}"}],
                label=str(mu))
    steps.append(step)

sliders = [dict(active=0, pad={"t": 50}, steps=steps)]

layout = dict(title="Normal Distribution Slider",
              sliders=sliders,
              xaxis=dict(title="x"), yaxis=dict(title="Density"))

fig = go.Figure(data=traces, layout=layout)
fig.show()
```