[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog Posts",
    "section": "",
    "text": "Welcome to my blog!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Beginner’s Guide to Data Science and Machine Learning\n\n\n\n\n\n\n\n\nMay 28, 2025\n\n\nSandeep N\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Posts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to Neural Notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhy Virtual Environments Matter in Machine Learning Projects\n\n\n\n\n\n\n\n\nMay 29, 2025\n\n\nSandeep N\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog Posts",
    "section": "",
    "text": "Welcome to my blog!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Beginner’s Guide to Data Science and Machine Learning\n\n\n\n\n\n\n\n\nMay 28, 2025\n\n\nSandeep N\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Posts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to Neural Notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhy Virtual Environments Matter in Machine Learning Projects\n\n\n\n\n\n\n\n\nMay 29, 2025\n\n\nSandeep N\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Intro to Data Science.html",
    "href": "posts/Intro to Data Science.html",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "",
    "text": "Welcome to my first technical blog post on Neural Notes! If you’re curious about what data science is and how machine learning fits into it, you’re in the right place. Let’s break it down from the ground up with relatable examples and practical insights.\nIn today’s digital age, data is being generated at an unprecedented rate from social media interactions and online shopping to healthcare records and smart devices. Data science plays a crucial role in turning this vast sea of raw data into meaningful insights that help businesses, governments, and individuals make smarter decisions.\n{Source: ChatGPT, height=500px, width= 1000px }"
  },
  {
    "objectID": "posts/Intro to Data Science.html#why-choose-data-science-or-machine-learning-as-a-career",
    "href": "posts/Intro to Data Science.html#why-choose-data-science-or-machine-learning-as-a-career",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "Why Choose Data Science or Machine Learning as a Career?",
    "text": "Why Choose Data Science or Machine Learning as a Career?\n\nHigh Demand, Low Supply\nLucrative Salaries\nIntellectually Stimulating\nDiverse Backgrounds Welcome"
  },
  {
    "objectID": "posts/Intro to Data Science.html#who-should-consider-this-path",
    "href": "posts/Intro to Data Science.html#who-should-consider-this-path",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "Who Should Consider This Path?",
    "text": "Who Should Consider This Path?\n\nCurious Minds: You love asking “why” and digging into data.\nProblem Solvers: Enjoy finding patterns, optimizing systems, or solving puzzles.\nCreative Thinkers: ML isn’t only math it’s about using data in innovative ways.\nCareer Changers: You’re in another domain but want a dynamic, future-facing role."
  },
  {
    "objectID": "posts/Intro to Data Science.html#what-is-data-science",
    "href": "posts/Intro to Data Science.html#what-is-data-science",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "What is Data Science?",
    "text": "What is Data Science?\nData science is the art and science of extracting insights from data using statistics, programming, and domain knowledge. It lies at the intersection of three main disciplines:\n\nMathematics & Statistics: to make sense of data patterns\nProgramming: to clean, manipulate, and visualize data\nDomain Knowledge: to contextualize the insights\n\nThink of a data scientist as a detective finding clues (features), identifying suspects (hypotheses), and solving mysteries (business problems) using data.\nData science powers personalized recommendations on streaming platforms, fraud detection in banking, targeted marketing campaigns, and even advances in medical diagnosis. It helps us understand complex patterns, predict future trends, and optimize operations across almost every industry.\nSimply put, data science is the backbone of innovation and efficiency in our modern world. As more data continues to be created every second, the ability to analyze and interpret this data effectively is becoming one of the most valuable skills and a key driver of progress and growth in society.\nFor example: instead of writing rules to identify spam emails, you can train an ML model with thousands of examples of spam and nonspam emails it learns patterns and starts identifying spam on its own."
  },
  {
    "objectID": "posts/Intro to Data Science.html#what-is-machine-learning",
    "href": "posts/Intro to Data Science.html#what-is-machine-learning",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "What is Machine Learning?",
    "text": "What is Machine Learning?\nMachine Learning (ML) is a subset of data science. It involves training algorithms to learn from data and make predictions or decisions without being explicitly programmed for every scenario.\n\n\nCode\nflowchart LR\n    A[Problem&lt;br&gt;Statement]\n    B[Data&lt;br&gt;Collection]\n    C[EDA and &lt;br&gt;Data Preprocessing]\n    D[Feature&lt;br&gt;Engineering]\n    E[Model&lt;br&gt;Training]\n    F[Model&lt;br&gt;Evaluation]\n    G{Training&lt;br&gt;Goal&lt;br&gt;Met?}\n    H[Hyperparameter&lt;br&gt;Tuning]\n    I[Model&lt;br&gt;Deployment]\n    J[Monitoring &&lt;br&gt;Maintenance]\n\n    A --&gt; B --&gt; C --&gt; D --&gt; E --&gt; F --&gt; G\n    G -- Yes --&gt; I --&gt; J --&gt; B\n    G -- No --&gt; H --&gt; E\n\n    style G fill:#2ECC71,color:#fff,font-weight:bold\n    style A fill:#D5F5E3\n    style B fill:#D5F5E3\n    style C fill:#D5F5E3\n    style D fill:#D5F5E3\n    style E fill:#D5F5E3\n    style F fill:#D5F5E3\n    style H fill:#D5F5E3\n    style I fill:#D5F5E3\n\n\n\n\n\nflowchart LR\n    A[Problem&lt;br&gt;Statement]\n    B[Data&lt;br&gt;Collection]\n    C[EDA and &lt;br&gt;Data Preprocessing]\n    D[Feature&lt;br&gt;Engineering]\n    E[Model&lt;br&gt;Training]\n    F[Model&lt;br&gt;Evaluation]\n    G{Training&lt;br&gt;Goal&lt;br&gt;Met?}\n    H[Hyperparameter&lt;br&gt;Tuning]\n    I[Model&lt;br&gt;Deployment]\n    J[Monitoring &&lt;br&gt;Maintenance]\n\n    A --&gt; B --&gt; C --&gt; D --&gt; E --&gt; F --&gt; G\n    G -- Yes --&gt; I --&gt; J --&gt; B\n    G -- No --&gt; H --&gt; E\n\n    style G fill:#2ECC71,color:#fff,font-weight:bold\n    style A fill:#D5F5E3\n    style B fill:#D5F5E3\n    style C fill:#D5F5E3\n    style D fill:#D5F5E3\n    style E fill:#D5F5E3\n    style F fill:#D5F5E3\n    style H fill:#D5F5E3\n    style I fill:#D5F5E3\n\n\n\n\n\n\nInstead of writing fixed rules, ML algorithms find patterns in data and use those patterns to make predictions, classifications, or decisions. This ability to learn and adapt from experience makes ML incredibly powerful for solving complex problems where traditional programming falls short.\n\n“A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.”\n— Tom Mitchell, 1997\n\nMachine Learning powers many technologies we use daily voice assistants, recommendation systems, spam filters, fraud detection, and self driving cars. It allows computers to handle tasks that are too complex for traditional programming by learning directly from data.\nAs data grows and computing power increases, ML’s role in driving automation, personalization, and intelligent decision-making will only become more significant."
  },
  {
    "objectID": "posts/Intro to Data Science.html#types-of-machine-learning",
    "href": "posts/Intro to Data Science.html#types-of-machine-learning",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "Types of Machine Learning",
    "text": "Types of Machine Learning\nMachine learning is generally categorized into three types:\n\n1. Supervised Learning\nIn supervised learning, the algorithm is trained on a labeled dataset (i.e., the input data comes with corresponding output labels).\n\n\n\n\n\n\nDid You Know?\n\n\n\nSupervised learning is the most common form of machine learning, where the model learns from labeled data.\n\n\n\nExamples:\n\nSpam Detection: Emails labeled as spam or not spam\nHouse Price Prediction: Historical house data with prices\n\n\n\nCommon Algorithms:\n\nLinear Regression\nDecision Trees\nSupport Vector Machines\nRandom Forests\nXGBoost\n\n\n\nReal-world Use Case:\nA bank wants to predict loan defaults. It uses historical customer data (age, income, credit score) labeled with whether they defaulted. The model learns this mapping and predicts for new applicants.\n\n\n\n\n2. Unsupervised Learning\nHere, the algorithm explores unlabeled data to find hidden patterns or groupings.\n\nExamples:\n\nCustomer Segmentation: Grouping users based on behavior\nAnomaly Detection: Finding unusual patterns in network traffic\n\n\n\nCommon Algorithms:\n\nKMeans Clustering\nHierarchical Clustering\nPCA (Dimensionality Reduction)\n\n\n\nReal-world Use Case:\nAn ecommerce platform uses clustering to group customers with similar purchasing behavior. It then tailors recommendations to each segment.\n\n\n\n\n3. Reinforcement Learning\nThe algorithm learns by interacting with an environment, receiving rewards or penalties for actions.\n\nExamples:\n\nGame playing AI (e.g., AlphaGo)\nRobotics (self learning movement)\nSelf driving cars (learning to steer, accelerate, brake)\n\n\n\n\n\n\n\nCaution\n\n\n\nReinforcement learning can be powerful, but it’s computationally expensive and sensitive to hyperparameters. Use it only when suitable!\n\n\n\n\nConcepts:\n\nAgent, Environment\nState, Action, Reward\nPolicy & Value functions\n\n\n\nReal-world Use Case:\nAn autonomous drone learns to navigate a complex environment by trial and error, receiving rewards for reaching waypoints safely.\n\n\n\n\n\n\n\nWarning\n\n\n\nToo much time spent on model tuning with poor data will still give poor results. Garbage in, garbage out!"
  },
  {
    "objectID": "posts/Intro to Data Science.html#whats-the-future",
    "href": "posts/Intro to Data Science.html#whats-the-future",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "What’s the Future?",
    "text": "What’s the Future?\n\nLLMs and Generative AI are revolutionizing everything from content creation to legal assistance.\nFields like AI ethics, edge computing, healthcare AI, and green ML are just beginning."
  },
  {
    "objectID": "posts/Intro to Data Science.html#further-reading-and-resources",
    "href": "posts/Intro to Data Science.html#further-reading-and-resources",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "Further Reading and Resources",
    "text": "Further Reading and Resources\n\nThe Elements of Statistical Learning — Hastie, Tibshirani, Friedman\nMachine Learning Yearning — Andrew Ng\nGoogle’s Machine Learning Crash Course\nML Course Coursera"
  },
  {
    "objectID": "posts/Intro to Data Science.html#whats-next",
    "href": "posts/Intro to Data Science.html#whats-next",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "What’s Next?",
    "text": "What’s Next?\nIn the next post, we’ll dive into the Machine Learning workflow a step by step guide on how data scientists turn raw data into real world insights and predictions. From collecting data to deploying models, we’ll explore the entire journey in a beginner friendly way.\nHere are some topics I’ll be covering soon:\n\nThe Machine Learning Workflow Explained\nExploratory Data Analysis (EDA) for Beginners\nData Cleaning 101\nFeature Engineering\nModel Selection Simplified\nEvaluation Metrics Made Easy\n\nIn these posts, I’ll also be sharing working examples and showing how to run code in Python or R\nStay tuned!"
  },
  {
    "objectID": "posts/Intro to Data Science.html#final-thoughts",
    "href": "posts/Intro to Data Science.html#final-thoughts",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nMachine learning might sound intimidating at first, but it’s really just pattern recognition at scale. With the right questions and clean data, it can solve real world problems across finance, healthcare, retail, and beyond.\nThis blog is my way of learning out loud if you have suggestions, corrections, or want to share ideas, feel free to reach out!\n\n\nConnect with Me\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesclaimer\n\n\n\nI use AI tools to assist in writing and drafting some of the content on this blog. but all content is reviewed and edited by me for accuracy and clarity."
  },
  {
    "objectID": "posts/Intro to Data Science.html#comments",
    "href": "posts/Intro to Data Science.html#comments",
    "title": "A Beginner’s Guide to Data Science and Machine Learning",
    "section": "💬 Comments",
    "text": "💬 Comments"
  },
  {
    "objectID": "posts/Venvs.html#introduction",
    "href": "posts/Venvs.html#introduction",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "Introduction",
    "text": "Introduction\nMany beginners (including me 🤘🏽🤦🏽‍♂️) in data science and machine learning often rush into building models without laying the foundation for a clean, maintainable, and scalable workflow. In this post, I’ll walk you through why setting up a virtual environment and organizing your ML project files isn’t just helpful it’s essential.\nWhether you’re a beginner or not, these practices will keep your projects healthy as they grow.\n{Source: ChatGPT, height=500px, width= 1000px}"
  },
  {
    "objectID": "posts/Venvs.html#learning-the-hard-way",
    "href": "posts/Venvs.html#learning-the-hard-way",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "Learning the Hard Way",
    "text": "Learning the Hard Way\nI didn’t come from a traditional programming background. I didn’t learn about virtual environments or project organization in a classroom or bootcamp. For the longest time, I was just running pip install in the global Python environment and saving my files wherever they felt convenient.\nAnd guess what? Everything seemed fine… until it wasn’t.\nWhen I was working on a real-world machine learning project for a client, I had to:\n\nUse specific versions of packages (example: pandas and scikit-learn)\nDebug code that worked on my machine but failed on the client’s server.\nShare my work with another data scientist who couldn’t run any of my code.\n\nIt was chaotic.\nI was neck-deep in bugs, broken dependencies, and messy file structures. And there was no turning back, I had to fix it all in a short time.\nThat’s when I discovered virtual environments and structured project setups, not from a course, but from necessity. It wasn’t theory. It was survival.\n\n\n\n\n\n\nImportant\n\n\n\nSet up a virtual environment and organize your folders even if you’re just experimenting. it doesn’t seem urgent, until it is."
  },
  {
    "objectID": "posts/Venvs.html#why-this-matters",
    "href": "posts/Venvs.html#why-this-matters",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "Why This Matters",
    "text": "Why This Matters\n1. Dependency Isolation\nHave you ever installed a library for one project, only to find that it breaks another one? That’s dependency hell. Virtual environments let you isolate dependencies for each project, so you can use different versions of the same library in different projects without conflicts.\n2. Reproducibility\nImagine trying to run a project six months later and nothing works. Why? Because the environment changed. Virtual environments + a requirements.txt file = perfect reproducibility.\n3. Cleaner Code and Collaboration\nStructured code is easier to debug, scale, or share with teammates."
  },
  {
    "objectID": "posts/Venvs.html#setting-up-a-project-the-right-way",
    "href": "posts/Venvs.html#setting-up-a-project-the-right-way",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "Setting Up a Project the Right Way",
    "text": "Setting Up a Project the Right Way\nWhen starting a new project, it’s good practice to keep all your files organized in their own folder. Here’s how you can create a folder and move into it using your computer’s command line interface.\n\n1: Open your terminal or command prompt\n\nOn Windows, search for Command Prompt or PowerShell and open it.\nOn macOS, open the Terminal app.\nOn Linux, open your terminal application.\n\n\n\n2. Create a project folder\nmkdir ml_project\ncd ml_project\n\nmkdir ml_project Creates a new directory (folder) named ml_project in your current location. mkdir stands for make directory.\ncd ml_project Changes your current working directory to the newly created ml_project folder. cd stands for change directory.\n\n\n\n3. Create and Activate a Virtual Environment\npython3.12 -m venv venv\n\n\n\n\n\n\nNote\n\n\n\nRunning python3.12 -m venv venv does not install Python 3.12, it simply uses that version (if already installed) to create the virtual environment. You’ll need to install Python 3.12 manually on your system before using this command.\n\n\nLet’s break down what each part means:\npython3.12: This specifies the Python interpreter you want to use for creating the virtual environment. In this case, it’s explicitly telling your system to use Python version 3.12. If you just used python or python3, it would use your default Python installation.\n-m: This flag stands for “module.” It tells the Python interpreter to run a specified module as a script.\nvenv: This is the name of the module that Python provides for creating virtual environments.\nvenv (the second one): This is the name you are giving to your new virtual environment directory. a new directory named venv will be created in your current working directory. This directory will contain a copy of the Python interpreter, pip, and other necessary files for your isolated environment.\nthe command python3.12 -m venv venv does the following:\n\nIt uses the Python 3.12 interpreter.\nIt runs the venv module.\nIt creates a new directory named venv (the second venv in the command) in the current location. - This directory will house your isolated Python environment.\n\nAfter creating a Venv, you would typically activate the virtual environment\nsource venv/bin/activate  # macOS/Linux\n#venv\\Scripts\\activate     # Windows\n\n\n\n\n\n\nNote\n\n\n\nTo verify if a Python virtual environment (venv) is activated, check if your terminal prompt is prefixed with the environment’s name (e.g., (venv)). make sure that it is activated before installing any packages.\n\n\n\n\n4: Install Essential Packages\n#Single package at a time\npip install numpy\n\n# Multiple packages at once\npip install pandas matplotlib scikit-learn\npip: This stands for “Pip Installs Packages.” It is the standard package installer for Python.\n\npip manages Python packages that aren’t part of the standard library.\nYou should use pip whenever you need external Python packages for your projects.\nYou can install and uninstall packages with pip.\nYou use requirements files to manage projects’ dependencies.\n\n\n\n\n\n\n\nCaution\n\n\n\nTo install multiple Python packages like numpy, pandas, matplotlib, and scikit-learn, you simply list them separated by spaces, no commas needed. pip install pandas matplotlib scikit-learn\n\n\n\n\n5: Freeze Your Environment\nOnce you’ve installed all the necessary libraries and your application is working as expected, freezing the environment creates a snapshot of those dependencies. This is like a “checkpoint” for your project’s environment.\npip freeze &gt; requirements.txt\nEvery time you add a new package with pip install or remove one with pip uninstall, it’s a good practice to update your requirements.txt file to reflect the current state of your virtual environment.\n\n\n\n\n\n\nNote\n\n\n\nFor robust project setups, use Poetry instead of pip as it offers integrated dependency management and automatic lock files (poetry.lock). Poetry\n\n\n\n\n6. To replicate the environment later by you or others\npip install -r requirements.txt\nThis command automates the process of setting up a project’s Python dependencies. Instead of manually running pip install for each package, you can just run this one command, and pip will install everything your project needs, often with the precise versions required for compatibility. This is crucial for reproducible development environments."
  },
  {
    "objectID": "posts/Venvs.html#conclusion",
    "href": "posts/Venvs.html#conclusion",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "Conclusion",
    "text": "Conclusion\nUsing a venv isn’t just a good practice it’s essential. It keeps your project dependencies isolated, prevents “dependency hell”, and ensures your code behaves consistently across machines. I’ve learned this the hard way as someone who didn’t come from a programming background, it wasn’t until I hit painful roadblocks in a real-world client project that I realized the value of proper environment management.\nWhile model accuracy often takes the spotlight, it’s only one part of the bigger picture. Reproducibility, collaboration, and maintainability are just as important especially when your work moves from personal projects to production or team settings."
  },
  {
    "objectID": "posts/Venvs.html#whats-next-getting-started-with-git-github",
    "href": "posts/Venvs.html#whats-next-getting-started-with-git-github",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "What’s Next: Getting Started with Git & GitHub",
    "text": "What’s Next: Getting Started with Git & GitHub\nNow that we’ve seen how important it is to structure your ML projects and isolate your environments, the next natural step is version control — and that’s where Git and GitHub come in.\nIn my next blog post, I’ll talk about:\n\nWhat Git actually is and why it’s essential\nSetting up a GitHub repository for your project"
  },
  {
    "objectID": "posts/Venvs.html#resources",
    "href": "posts/Venvs.html#resources",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "Resources",
    "text": "Resources\n\nPython Packaging User Guide — virtualenv tutorial\nReal Python - Python Virtual Environments\n\n\nConnect with Me\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesclaimer\n\n\n\nI use AI tools to assist in writing and drafting some of the content on this blog. but all content is reviewed and edited by me for accuracy and clarity."
  },
  {
    "objectID": "posts/Venvs.html#comments",
    "href": "posts/Venvs.html#comments",
    "title": "Why Virtual Environments Matter in Machine Learning Projects",
    "section": "💬 Comments",
    "text": "💬 Comments"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Welcome to Neural Notes",
    "section": "",
    "text": "Banner\nHi, I’m a data scientist with a deep curiosity for both data and science. I started this blog as a personal learning space — a place to explore new ideas, share what I’m discovering, and grow along the way.\nNeural Notes isn’t just a collection of posts — it’s my digital lab notebook. I’m learning in public, and I’d love to learn with you.\nIf you’re reading any of my posts, feel free to share your thoughts, suggestions, or corrections. Your feedback helps me improve — and maybe together, we can all get a little better at this data game.\nLet’s explore, experiment, and evolve — one post at a time."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "Welcome to Neural Notes",
    "section": "About Me",
    "text": "About Me\nHi, I’m Sandeep, a data scientist from Mysore, India, with over 8 years of experience turning questions into insights and models into impact.\nI work across the stack of data science — from exploring raw data to building machine learning models, analyzing fraud, experimenting with LLMs, and writing code in both Python and R. I enjoy solving real-world problems, especially the messy ones.\nThis blog is my personal space to learn, reflect, and grow — not just as a professional, but as someone genuinely curious about data, systems, and how they shape our world.\nOutside of work, I like exploring music (especially metal 🎸), building side projects, and occasionally getting lost in thought over coffee and code.\nThanks for stopping by. I hope you find something here that sparks your own curiosity."
  },
  {
    "objectID": "about.html#what-youll-find-here",
    "href": "about.html#what-youll-find-here",
    "title": "Welcome to Neural Notes",
    "section": "What You’ll Find Here",
    "text": "What You’ll Find Here\nThis blog is where I document what I’m learning and building, including: - End-to-end machine learning projects - Data science tools and tips in Python & R - Thoughts on LLMs, model interpretability, and experimentation - Side projects, visuals, and experiments"
  },
  {
    "objectID": "about.html#tools-i-often-use",
    "href": "about.html#tools-i-often-use",
    "title": "Welcome to Neural Notes",
    "section": "Tools I Often Use",
    "text": "Tools I Often Use\n\nProgramming: Python, R, SQL\nML & AI: scikit-learn, XGBoost, LightGBM, TensorFlow, Keras, transformers\nVisualization: ggplot2, matplotlib, seaborn, Plotly\nPlatforms: Jupyter, RStudio, Streamlit, Shiny, MLflow, FastAPI\n\n\nConnect with Me"
  },
  {
    "objectID": "about.html#comments",
    "href": "about.html#comments",
    "title": "Welcome to Neural Notes",
    "section": "💬 Comments",
    "text": "💬 Comments"
  }
]